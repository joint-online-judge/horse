# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Cache environment
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: new-${{ runner.os }}-${{ env.pythonLocation }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            new-${{ runner.os }}-${{ env.pythonLocation }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -e .; fi
      - name: Git setup
        uses: fregante/setup-git-user@v1
      - name: Generate openapi.json
        run: |
          mkdir -p build
          python3 -m joj.horse.openapi > build/openapi.json
      - name: Upload openapi.json as artifact
        uses: actions/upload-artifact@v2
        with:
          name: openapi-json
          path: build/openapi.json
      - name: Git push openapi.json
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: openapi
          build_dir: build
          keep_history: true
          commit_message: Generate openapi.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Git push openapi.json (develop)
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/develop'
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: openapi-develop
          build_dir: build
          keep_history: true
          commit_message: Generate openapi.json (develop)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  swagger-codegen:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop')
    needs: build
    runs-on: ubuntu-18.04
    env:
      JAR_VERSION: 3.0.26
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: openapi-json
          path: build/openapi.json
      - name: Set up OpenJDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          check-latest: true
      - name: Cache swagger-codegen
        id: cache-swagger-codegen
        uses: actions/cache@v2
        with:
          path: swagger-codegen-cli.jar
          key: ${{ runner.os }}-swagger-codegen-${{ env.JAR_VERSION }}
      - name: Download swagger-codegen
        if: steps.cache-swagger-codegen.outputs.cache-hit != 'true'
        run: |
          wget https://repo1.maven.org/maven2/io/swagger/codegen/v3/swagger-codegen-cli/${{ env.JAR_VERSION }}/swagger-codegen-cli-${{ env.JAR_VERSION }}.jar -O swagger-codegen-cli.jar
      - name: Create config file
        run: |
          echo '{packageName: "joj.horse.client", projectName: "horse-python-client"}' > build/python-client.json
      - name: Generate client
        run: |
          java -jar swagger-codegen-cli.jar -i build/openapi.json -l python -o build/client/python -c build/python-client.json
      - name: Push to client repo
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: 'build/client/python'
          destination-github-username: 'joint-online-judge'
          destination-repository-name: 'horse-python-client'
          user-email: joj@sjtu.edu.cn
          commit-message: See ORIGIN_COMMIT from $GITHUB_REF
          target-branch: ${GITHUB_REF##*/}
